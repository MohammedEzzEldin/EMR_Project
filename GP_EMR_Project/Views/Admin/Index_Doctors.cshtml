@model IEnumerable<GP_EMR_Project.Models.Doctor>

@{
    ViewBag.Title = "Index_Doctors";
    Layout = "~/Views/Shared/_Admin.cshtml";
}
<br />
<div class="" style="text-align:center">
    <ul class="nav navbar-nav" style="text-align:center; display:inline-block">
        @using (Html.BeginForm("Search_Doctor", "Admin", FormMethod.Post, new { @style = "display : inline-block" }))
        {
            <li>
                @Html.DropDownList("Search_by",
                           new SelectList(new List<SelectListItem>
                         {
                       new SelectListItem{Value = "dc_phone",  Text = "Phone" },
                       new SelectListItem{Value = "dc_fname",   Text = "First Name"},
                       new SelectListItem{Value = "dc_Lname"   ,   Text = "Last Name" },
                       new SelectListItem{Value = "dc_city"   ,   Text = "City" },
                       new SelectListItem{Value ="dc_email",    Text="email"}
                        }, "value", "text"), "Search By", new { @class = "form-control", @style = "margin-left :1px;",required = true }
                       )
                @Html.Editor("Search", new { htmlAttributes = new { @class = "form-control", placeholder = "Search", style = "text-align:center;", required = true } })
                <input type="submit" value="Search" class="btn btn-outline-danger" style="width:100%" />
            </li>
        }
    </ul>

    <ul class="nav navbar-nav" style="text-align:center; display:inline-block">
        @using (Html.BeginForm("Filter_Doctor", "Admin", FormMethod.Get, new { @style = "display : inline-block" }))
        {
            <li>
                @Html.DropDownList("Filter_by",
               new SelectList (new List<SelectListItem>
                         {
                        new SelectListItem {Text = "High Rate",  Value = "High_Rate" },
                        new SelectListItem {Text = "Low Rate",   Value = "Low_Rate" },
                        new SelectListItem {Text = "Last Name", Value = "Lname"},
                        new SelectListItem {Text = "First Name", Value = "fname"},
                        new SelectListItem {Text = "Nationality", Value = "Nationality"},
                        new SelectListItem {Text = "City", Value = "City"}
                        },"value","text")
                , "Filter by", new { @class = "form-control", style = "text-align:center;", required = true }
                        )

                @Html.DropDownList("Order_by",
                               new SelectList(new List<SelectListItem>
                             {
                           new SelectListItem{Value = "asc", Text = "Ascending",Selected= true },
                           new SelectListItem{Value = "dsc", Text = "Descending"},
                            }, "value", "text"), "Order By", new { @class = "form-control", style = "text-align:center;" }
                           )
                <input type="submit" value="Apply" class="btn btn-outline-danger" style="width:100%" />
            </li>
        }
    </ul>
</div>

<hr />
<h3 style="text-align:center">Patients</h3>
<div style="
         margin-top: 1%;
       ">
    <table class="table table-bordered table-hover">
        <tr style="text-align:center">
            <th>
                Name
            </th>

            <th>
                Medical Organization
            </th>

            <th>
                Phone
            </th>

            <th>
                Rate
            </th>

            <th>
                Status
            </th>
        </tr>

        @foreach (var item in Model)
        {
            <tr style="text-align:center">
                <td>
                    @Html.DisplayFor(modelItem => item.Person.First_Name) @Html.DisplayFor(modelItem => item.Person.Last_Name)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Person.User.Medical_Organization.Medical_Org_Name)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Person.User.Phone)
                </td>

                <td>
                    <small-star-rating>
                        @{
                            var rate = item.Medium_Rate;
                            var fraction = item.Medium_Rate - Math.Truncate(Double.Parse(rate.ToString()));
                            if (rate == null || rate == 0)
                            {
                                <div class="star"></div>
                                <div class="star"></div>
                                <div class="star "></div>
                                <div class="star "></div>
                                <div class="star"></div>
                            }
                            else
                            {
                                for (int j = 1; j <= 5; j++)
                                {
                                    if (j > (int)rate)
                                    {
                                        if (0.8 <= fraction)
                                        {
                                            <div class="star full"></div>
                                        }
                                        else if (0.4 <= fraction)
                                        {
                                            <div class="star Halfstar"></div>
                                        }
                                        else if (0.3 >= fraction)
                                        {
                                            <div class="star"></div>
                                        }
                                    }
                                    else
                                    {
                                        <div class="star full"></div>
                                    }
                                }
                            }
                        }
                    </small-star-rating>
                </td>

                @if (item.Person.User.Status_Of_Account == 0) // in activated
                {
                    <td style="background-color:red"></td>
                }
                @if (item.Person.User.Status_Of_Account == 1) // activated
                {
                    <td style="background-color:green"></td>
                }
                @if (item.Person.User.Status_Of_Account == 2) // blocked
                {
                    <td style="background-color:black"></td>
                }

                <td>
                    @if (item.Person.User.Status_Of_Account != 1)
                    {
                        @Html.ActionLink("Active", "Active_Account", new { id = item.Doctor_Id }, new { @class = "btn btn-outline-danger", style = "color:green" })
                    }
                    @if (item.Person.User.Status_Of_Account == 1)
                    {
                        @Html.ActionLink("Block", "Block", new { id = item.Doctor_Id }, new { @class = "btn btn-outline-danger", style = "color:black" })
                    }

                    @Html.ActionLink("Details", "Details", new { id = item.Doctor_Id }, new { @class = "btn btn-outline-primary" })
                    @Html.ActionLink("Edit", "Edit", new { id = item.Doctor_Id }, new { @class = "btn btn-outline-danger" })

                    @if (item.Person.User.Status_Of_Account == 0)
                    {
                        @Html.ActionLink("Delete", "Delete", new { id = item.Doctor_Id }, new { @class = "btn btn-outline-danger" })
                    }

                </td>
            </tr>
        }
    </table>
</div>